#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.20
#  in conjunction with Tcl version 8.6
#    Apr 19, 2019 01:07:54 PM IST  platform: Windows NT
import pymysql
import sys
import newpage
import newpage_support
import removepage
import updatepage
import updatepage_support
import viewpage
import viewpage_support
import ADMINLIST
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global optionA
    optionA = tk.StringVar()
    global optionB
    optionB = tk.StringVar()
    global optionC
    optionC = tk.StringVar()
    global optionD
    optionD = tk.StringVar()
    global correct
    correct = tk.StringVar()
    global coursename
    coursename = tk.StringVar()
    global hours
    hours = tk.StringVar()
    global mintues
    mintues = tk.StringVar()
    global seconds
    seconds = tk.StringVar()
    global combobox
    combobox = tk.StringVar()
    global totalquestion
    totalquestion = tk.StringVar()
    global Qnumber
    Qnumber = tk.StringVar()
    global questionwrite
    questionwrite = tk.StringVar()


def callback(eventObject):
    #print("ello")
    db=pymysql.connect("localhost","root","1234","test",3309)
    c=db.cursor()
    sql=("select * from question where question_number='%s'"%(Qnumber.get()))
    c.execute(sql)
    result=c.fetchall()
    print(result)
    counter=0
    question_number=0
    for x in result:
        counter=counter+1
        print(counter)
        question_number=x[0]
        questionwrite.set(x[1])
        optionA.set(x[2])
        optionB.set(x[3])
        optionC.set(x[4])
        optionD.set(x[5])
        correct.set(x[6])
        coursename.set(x[7])
        hours.set(x[8])
        mintues.set(x[9])
        seconds.set(x[10])
        combobox.set(x[11])
        totalquestion.set(x[12])



def new1():
    destroy_window()
    newpage.vp_start_gui()

def nextQ():
    destroy_window()
    ADMINLIST.vp_start_gui()

def remove1():
    destroy_window()
    removepage.vp_start_gui()

def saveQ():
    db=pymysql.connect("localhost","root","1234","test",3309)
    c=db.cursor()
    sql=("delete from question WHERE question_number='%s'"%(Qnumber.get()))
    c.execute(sql)
    db.commit()


def update1():
    destroy_window()
    updatepage.vp_start_gui()

def view1():
    destroy_window()
    viewpage.vp_start_gui()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import removepage
    removepage.vp_start_gui()




