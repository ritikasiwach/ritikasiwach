#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    Apr 15, 2019 10:27:20 PM IST  platform: Windows NT
#    Apr 16, 2019 02:37:34 PM IST  platform: Windows NT
#    Apr 16, 2019 02:38:17 PM IST  platform: Windows NT

import sys
import loginpage
import forget_password
#import reset_support
from tkinter import messagebox
import pymysql

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global ent1
    ent1 = tk.StringVar()
    global combobox
    combobox = tk.StringVar()
    global combobox1
    combobox1 = tk.StringVar()
    global ent2
    ent2 = tk.StringVar()
    global ent3
    ent3 = tk.StringVar()
    global ans1
    ans1 = tk.StringVar()
    global ans2
    ans2 = tk.StringVar()

def back():
    destroy_window()
    loginpage.vp_start_gui()

def submit():
    try:
        print(ent1.get())
        db=pymysql.connect("localhost","root","1234","test",3007)
        c=db.cursor()
        sql="select * from students where email='%s'"%(ent1.get())
        c.execute(sql)
        result=c.fetchall()
        counter=0
   
        for x in result:
            counter=counter+1
            ques1=x[4]
            ans1.set(x[5])
            ques2=x[6]
            ans2.set(x[7])
        if counter>0:
            combobox.set(ques1)
            combobox1.set(ques2)
            db.close()
        else:
            print("INVALID USER")
            messagebox.showinfo('Login','INVALID USER')
            db.close()
        
    except:
        print("error found")
       # messagebox.showinfo('NO DATA','NO SUCH DATA AVAILABLE.....')
    w.Labelframe1 = tk.LabelFrame(top_level)
    w.Labelframe1.place(relx=0.073, rely=0.198, relheight=0.60 , relwidth=0.865)
    w.Labelframe1.configure(relief='groove')
    w.Labelframe1.configure(font="-family {Segoe UI} -size 13 -weight bold")
    w.Labelframe1.configure(foreground="white")
    w.Labelframe1.configure(text='''Security Questions''')
    w.Labelframe1.configure(background="black")
    w.Labelframe1.configure(width=590)

    w.Label2 = tk.Label(w.Labelframe1)
    w.Label2.place(relx=0.034, rely=0.196, height=21, width=114, bordermode='ignore')
    w.Label2.configure(background="black")
    w.Label2.configure(disabledforeground="#a3a3a3")
    w.Label2.configure(font="-family {Segoe UI} -size 12 -weight bold")
    w.Label2.configure(foreground="white")
    w.Label2.configure(text='''Question # 1''')
    w.Label2.configure(width=114)

    w.TCombobox1 = ttk.Combobox(w.Labelframe1)
    w.TCombobox1.place(relx=0.271, rely=0.157, relheight=0.122 , relwidth=0.666, bordermode='ignore')
    w.TCombobox1.configure(font="-family {Segoe UI} -size 12")
    w.TCombobox1.configure(textvariable=combobox)
    w.TCombobox1.configure(width=393)
    w.TCombobox1.configure(takefocus="")

    w.Label3 = tk.Label(w.Labelframe1)
    w.Label3.place(relx=0.034, rely=0.353, height=21, width=94, bordermode='ignore')
    w.Label3.configure(background="black")
    w.Label3.configure(disabledforeground="#a3a3a3")
    w.Label3.configure(font="-family {Segoe UI} -size 12 -weight bold")
    w.Label3.configure(foreground="white")
    w.Label3.configure(text='''Answer :''')
    w.Label3.configure(width=94)

    w.Label4 = tk.Label(w.Labelframe1)
    w.Label4.place(relx=0.034, rely=0.588, height=21, width=104, bordermode='ignore')
    w.Label4.configure(background="black")
    w.Label4.configure(disabledforeground="#a3a3a3")
    w.Label4.configure(font="-family {Segoe UI} -size 12 -weight bold")
    w.Label4.configure(foreground="white")
    w.Label4.configure(text='''Question # 2''')
    w.Label4.configure(width=104)

    w.TCombobox2 = ttk.Combobox(w.Labelframe1)
    w.TCombobox2.place(relx=0.271, rely=0.549, relheight=0.122, relwidth=0.666, bordermode='ignore')
    w.TCombobox2.configure(font="-family {Segoe UI} -size 12")
    w.TCombobox2.configure(textvariable=combobox1)
    w.TCombobox2.configure(width=393)
    w.TCombobox2.configure(takefocus="")

    w.Label5 = tk.Label(w.Labelframe1)
    w.Label5.place(relx=0.051, rely=0.745, height=21, width=84, bordermode='ignore')
    w.Label5.configure(background="black")
    w.Label5.configure(disabledforeground="#a3a3a3")
    w.Label5.configure(font="-family {Segoe UI} -size 12 -weight bold")
    w.Label5.configure(foreground="white")
    w.Label5.configure(text='''Answer :''')
    w.Label5.configure(width=84)

    w.Entry2 = tk.Entry(w.Labelframe1)
    w.Entry2.place(relx=0.271, rely=0.353, height=35, relwidth=0.668, bordermode='ignore')
    w.Entry2.configure(background="white")
    w.Entry2.configure(borderwidth="3")
    w.Entry2.configure(disabledforeground="#a3a3a3")
    w.Entry2.configure(font="TkFixedFont")
    w.Entry2.configure(foreground="#000000")
    w.Entry2.configure(insertbackground="black")
    w.Entry2.configure(relief="groove")
    w.Entry2.configure(width=394)
    w.Entry2.configure(textvariable=ent2)
    w.Entry2.insert(0,'Answer')
    w.Entry2.bind("<FocusIn>",lambda args: w.Entry2.delete('0','end'))

    w.Entry3 = tk.Entry(w.Labelframe1)
    w.Entry3.place(relx=0.271, rely=0.745, height=35, relwidth=0.668 , bordermode='ignore')
    w.Entry3.configure(background="white")
    w.Entry3.configure(borderwidth="3")
    w.Entry3.configure(disabledforeground="#a3a3a3")
    w.Entry3.configure(font="TkFixedFont")
    w.Entry3.configure(foreground="#000000")
    w.Entry3.configure(insertbackground="black")
    w.Entry3.configure(relief="groove")
    w.Entry3.configure(textvariable=ent3)
    w.Entry3.configure(width=394)
    w.Entry3.insert(0,'Answer')
    w.Entry3.bind("<FocusIn>",lambda args: w.Entry3.delete('0','end'))       
def verify():
    print(ent2.get())
    print(ent3.get())
    db=pymysql.connect("localhost","root","1234","test",3007)
    c=db.cursor()
    sql="select * from students where student_name='%s' or email='%s'"%(ent1.get(),ent1.get())
    c.execute(sql)
    result=c.fetchall()
    counter=0
    i=0
    for x in result:
           
            ans1=x[5]
            ans2=x[7]
    if (ans1 == ent2.get() and ans2 == ent3.get()):
        for x in result:
            counter=counter+1
            email=x[1]
        if counter>0:
            print("Login success")
            
            import face_detect32
            i=face_detect32.detect(ent1.get())
            if i>0:
                messagebox.showinfo('CHANGE PASSWORD','USER VERIFIED')
                destroy_window()
                forget_password.vp_start_gui(ent1.get())
    else:
          messagebox.showinfo('ANSWER INVALID','INSERT RIGHT ANSWER')
        
def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import forgot_pswd
    forgot_pswd.vp_start_gui()




